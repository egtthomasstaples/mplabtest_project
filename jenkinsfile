// pipeline{
//     agent {label 'Linux'}
//     stages {
//         stage('Checkout from SCM') {
//             agent {
//                 docker
//                 {
//                     alwaysPull false
//                     reuseNode true
//                     image 'mplabx-5.25_xc16-1.36'
//                 }  
//             }
//             steps {
//                 checkout scm
//                 sh """
//                 #!/bin/bash
//                     /opt/microchip/mplabx/v5.25/mplab_platform/bin/prjMakefilesGenerator.sh -f ./mplab_second_project.X
//                     cd mplab_second_project.X/
//                     ls
//                     /opt/microchip/mplabx/v5.25/mplab_platform/bin/make clean
//                     /opt/microchip/mplabx/v5.25/mplab_platform/bin/make --always-make all
//                     ls
//                     cp dist/default/production/mplab_second_project.X.production.hex $WORKSPACE/test_release.hex
//                 """
//                 archiveArtifacts artifacts: 'test_release.hex'

//                 // sh "ls"
//                 // // Generate make files 
//                 // sh "/opt/microchip/mplabx/v5.25/mplab_platform/bin/prjMakefilesGenerator.sh -f ./mplab_second_project.X"
//                 // // Clean output directory. 
//                 // sh "cd mplab_second_project.X/"
//                 // sh "ls"
//                 // sh "/opt/microchip/mplabx/v5.25/mplab_platform/bin/make ./mplab_second_project.X/clean"
//                 // // Build all targets
//                 // sh "/opt/microchip/mplabx/v5.25/mplab_platform/bin/make ./mplab_second_project.X/ --always-make all"

//                 // sh "ls"
//                 // sh "echo hello"
//             }
//         }
//     }
// }
node {
    stage("Power on VM"){
        sh"""
        #!/bin/bash
        doctl compute droplet-action power-on 364671951
        """
        def vmResponse = 'inactive'
        while (vmResponse != 'active')
        {
            sh "doctl compute droplet get 364671951 --format 'Status' | grep active > vmResponse.txt"
            sh "ls"
            sh "cat vmResponse.txt"
            sh "vmResponse = cat vmResponse.txt"
            echo "${vmResponse}"

        }
        sh "ssh root@188.166.153.31 java -jar /root/bin/slave.jar"

    }
}

node('Linux'){
    stage("Do i run this"){
        echo "Do in get to here"
    }
}
node{
    stage('Power off VM'){
        sh"""
        #!/bin/bash
        doctl compute droplet-action power-off 364671951
        """
    }
}
